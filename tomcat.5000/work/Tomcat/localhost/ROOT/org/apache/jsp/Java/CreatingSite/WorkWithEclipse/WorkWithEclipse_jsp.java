/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.38
 * Generated at: 2020-06-01 21:17:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Java.CreatingSite.WorkWithEclipse;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class WorkWithEclipse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<!-- Для обеспечения правильной визуализации и сенсорного масштабирования для всех устройств -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n");
      out.write("<!-- Подключаем свои стили-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../../style.css\">\r\n");
      out.write("\r\n");
      out.write("<title>Работа в Eclipse</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../../header.html", out, false);
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("<main role=\"main\" class=\"container\">\r\n");
      out.write("  <div class=\"row\">\r\n");
      out.write("    <div class=\"col-md-8 blog-main\" style=\"border-right: solid 1px red\">\r\n");
      out.write("      <h3 class=\"pb-3 mb-4 font-italic border-bottom\">\r\n");
      out.write("        Создание сайта\r\n");
      out.write("      </h3> \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("          <div class=\"blog-post\">\r\n");
      out.write("            <h4 class=\"blog-post-title2\">Работа с проектом в Eclipse</h4>\r\n");
      out.write("            <p class=\"blog-post-meta\">June 1, 2020 by <a href=\"/aboutme.jsp\">Sergey Emelyanov</a></p>\r\n");
      out.write("\r\n");
      out.write("            <p>Эта статья как продолжение создания Maven вэб-приложение из консоли. Переходим работать в Eclipse, так как мы будем работать с Java-кодом (подключение к базе данных и манипулирование ей и другое), то в Eclipse это делать намного удобнее.</p>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <!-- --------------------------------------------------------------------------------------------------------------------------------- -->\r\n");
      out.write("            <!-- \r\n");
      out.write("            Жирный текст с собственным цветом  \r\n");
      out.write("            <strong><font color=\"#5900AC\">1.</font></strong>\r\n");
      out.write("            Картинка в бордере\r\n");
      out.write("            <p><img style=\"width:100%; height:100%; box-shadow: 0 0 10px #5900AC\" src=\"screenshots/downloadtheinstaller3.png\"></p>\r\n");
      out.write("            -->\r\n");
      out.write("            <p><strong>1.</strong> Открываем Eclipse.<br>\r\n");
      out.write("               Как установить Eclipse и первоначально настроить - будет в другой статье. Пока этой статьи нет, то можно воспользваться другими ресурсами, которых привеликое множество в интернете.</p>\r\n");
      out.write("\r\n");
      out.write("            <p><strong>2.</strong><strong><font color=\"#5900AC\"> File -> Open Projects from File Systems</font></strong><br> \r\n");
      out.write("              В графе <strong><font color=\"#5900AC\">Import source</font></strong> через кнопку <strong><font color=\"#5900AC\">Directory…</font></strong> выбираем свой проект и жмем <strong><font color=\"#5900AC\">Finish</font></strong>. Проект появляется в <strong>Project Explorer</strong>.</p>\r\n");
      out.write("\r\n");
      out.write("            <p><strong>3.</strong> В <strong>Project Explorer</strong> нажимаем правой кнопкой мыши по проекту, чтобы вызвать контекстное меню и далее выбираем:<br> \r\n");
      out.write("            <strong><font color=\"#5900AC\">Run As</font></strong> -> <strong><font color=\"#5900AC\">Run Configuration…</font></strong> как на картинке</p>  \r\n");
      out.write("            <p><img style=\"width:100%; height:100%; box-shadow: 0 0 10px #5900AC\" src=\"screenshots/run_configurations_1.png\"></p>\r\n");
      out.write("\r\n");
      out.write("            <p><strong>4.</strong> В появившемся окне настроек находим  <strong><font color=\"#5900AC\">Maven Build</font></strong> и правой кнопкой мыши в контекстном меню жмем на <strong><font color=\"#5900AC\">New Configuration</font></strong></p>\r\n");
      out.write("            <p><img style=\"width:100%; height:100%; box-shadow: 0 0 10px #5900AC\" src=\"screenshots/maven_build_2.png\"></p>\r\n");
      out.write("\r\n");
      out.write("            <p><strong>5.</strong> Таким образом создается New_configuration</p>\r\n");
      out.write("            <p><img style=\"width:100%; height:100%; box-shadow: 0 0 10px #5900AC\" src=\"screenshots/missing_configuration_3.png\"></p>\r\n");
      out.write("            <p>Пройдемся по каждому пункту:<br>\r\n");
      out.write("             <strong><font color=RED>1</font></strong> - в графе <strong>Name</strong> необходимо указать <strong>Run nameproject</strong>, где <strong>nameproject</strong> это имя вашего проекта/корневой папки/ArtifactId<br>\r\n");
      out.write("             <strong><font color=RED>2</font></strong> - поле автоматом заполняется после того как выбрать директорию проекта (путь к корневой папке проекта)<br>\r\n");
      out.write("             <strong><font color=RED>3</font></strong> - Нажимаем кнопку <strong>Workspace</strong>, чтобы выбрать проект\r\n");
      out.write("             <p><img style=\"box-shadow: 0 0 10px #5900AC\" src=\"screenshots/chose_project_4.png\"></p>\r\n");
      out.write("             <p>Выбираем проект и жмем OK. В данном примере проект называется <strong>mavenwebapp</strong></p>\r\n");
      out.write("             <strong><font color=RED>4</font></strong> - в <strong>Goals</strong> необходимо внести <strong><font color=\"#5900AC\">tomcat7:run -X</font></strong>\r\n");
      out.write("             <br>\r\n");
      out.write("             В конечном итоге получаем окно с такими настройками:\r\n");
      out.write("             <p><img style=\"width:100%; height:100%; box-shadow: 0 0 10px #5900AC\" src=\"screenshots/configuration_id_done_5.png\"></p>\r\n");
      out.write("             Нажимаем <stront>Apply</stront> и <strong>Run</strong>\r\n");
      out.write("\r\n");
      out.write("            </p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("          </div><!-- /.blog-post -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("    </div><!-- /.blog-main -->\r\n");
      out.write("\r\n");
      out.write("    <aside class=\"col-md-4 blog-sidebar\">\r\n");
      out.write("      <div class=\"p-4 mb-3 bg-light rounded\">\r\n");
      out.write("        <h4 class=\"font-italic\">О чем статейка</h4>\r\n");
      out.write("        <p class=\"mb-0\">Настройки Maven в Eclipse'е</p>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"p-4\">\r\n");
      out.write("        <h4 class=\"font-italic\">Статьи</h4>\r\n");
      out.write("        <ol class=\"list-unstyled mb-0\">\r\n");
      out.write("          <li><a href=\"#\">1. Создание Maven проекта</a></li>\r\n");
      out.write("          <li><a href=\"/Java/CreatingSite/WorkWithEclipse/WorkWithEclipse.jsp\">2. Работа с проектом в Eclipse</a></li>\r\n");
      out.write("        </ol>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"p-4\">\r\n");
      out.write("        <h4 class=\"font-italic\">Elsewhere</h4>\r\n");
      out.write("        <ol class=\"list-unstyled\">\r\n");
      out.write("          <li><a href=\"#\">GitHub</a></li>\r\n");
      out.write("          <li><a href=\"#\">Twitter</a></li>\r\n");
      out.write("          <li><a href=\"#\">Facebook</a></li>\r\n");
      out.write("        </ol>\r\n");
      out.write("      </div>\r\n");
      out.write("    </aside><!-- /.blog-sidebar -->\r\n");
      out.write("\r\n");
      out.write("  </div><!-- /.row -->\r\n");
      out.write("\r\n");
      out.write("</main><!-- /.container -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../../footer.html", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<!-- Подключаем скрипты JavaScript прям перед закрывающимся тегом body. Так указано на сайте Bootstrap -->\r\n");
      out.write("<!-- Optional JavaScript -->\r\n");
      out.write("<!-- jQuery first, then Popper.js, then Bootstrap JS -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
